[{"H:\\JavaScript_Sorting\\sorting\\src\\index.js":"1","H:\\JavaScript_Sorting\\sorting\\src\\reportWebVitals.js":"2","H:\\JavaScript_Sorting\\sorting\\src\\App.js":"3","H:\\JavaScript_Sorting\\sorting\\src\\Components\\Navbar.js":"4","H:\\JavaScript_Sorting\\sorting\\src\\Components\\cont.js":"5","H:\\JavaScript_Sorting\\sorting\\src\\Components\\NewData.js":"6","H:\\JavaScript_Sorting\\sorting\\src\\Components\\Algorithms\\sortingAlgos.js":"7","H:\\JavaScript_Sorting\\sorting\\src\\Components\\Algorithms\\helper.js":"8","H:\\JavaScript_Sorting\\sorting\\src\\Components\\Aboutme.js":"9","H:\\JavaScript_Sorting\\sorting\\src\\Components\\Contactme.js":"10"},{"size":500,"mtime":499162500000,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"12"},{"size":623,"mtime":1621679128612,"results":"14","hashOfConfig":"12"},{"size":705,"mtime":1621679315620,"results":"15","hashOfConfig":"12"},{"size":5419,"mtime":1615213699603,"results":"16","hashOfConfig":"12"},{"size":842,"mtime":1614878064694,"results":"17","hashOfConfig":"12"},{"size":2145,"mtime":1615359505905,"results":"18","hashOfConfig":"12"},{"size":753,"mtime":1615367811948,"results":"19","hashOfConfig":"12"},{"size":1069,"mtime":1621619524851,"results":"20","hashOfConfig":"12"},{"size":1818,"mtime":1621681622866,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"hwh3r1",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"24"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"H:\\JavaScript_Sorting\\sorting\\src\\index.js",[],["48","49"],"H:\\JavaScript_Sorting\\sorting\\src\\reportWebVitals.js",[],"H:\\JavaScript_Sorting\\sorting\\src\\App.js",["50"],"H:\\JavaScript_Sorting\\sorting\\src\\Components\\Navbar.js",["51"],"H:\\JavaScript_Sorting\\sorting\\src\\Components\\cont.js",["52","53","54","55"],"import React, { useState } from \"react\";\r\nimport createArray from \"./NewData\";\r\nimport {\r\n  BubbleSort,\r\n  InsertionSort,\r\n  SelectionSort,\r\n  HeapSort,\r\n  MergeSort,\r\n  QuickSort,\r\n} from \"./Algorithms/sortingAlgos\";\r\n\r\n//style = {{margin : '50px', minWidth : '1200px' , minHeight : '500px'}\r\nconst Container = () => {\r\n  const [arr, setArray] = useState(createArray());\r\n  const [steps, setSteps] = useState([]);\r\n  const [selectedAlgorithm, setSelectedAlgorithm] = useState();\r\n  const [isSorted, setIsSorted] = useState(false);\r\n  const color = [0];\r\n\r\n  const algorithms = {\r\n    BubbleSort,\r\n    InsertionSort,\r\n    SelectionSort,\r\n    HeapSort,\r\n    MergeSort,\r\n    QuickSort,\r\n  };\r\n\r\n  const handleCreateNewData = () => {\r\n    let newarr = createArray();\r\n    setArray([]);\r\n\r\n    setArray([...newarr]);\r\n    setSteps([]);\r\n\r\n    if (algorithms[selectedAlgorithm] !== undefined) {\r\n      algorithms[selectedAlgorithm](newarr, setSteps);\r\n    }\r\n    if (isSorted) {\r\n      setIsSorted(false);\r\n    }\r\n    console.log(arr);\r\n  };\r\n\r\n  const handleOnchange = (e) => {\r\n    console.log(e.target.value);\r\n    setSelectedAlgorithm(e.target.value);\r\n    algorithms[e.target.value](arr, setSteps);\r\n  };\r\n\r\n  const setTimeoutfun = () => {\r\n    //    let steps = steps;\r\n    if (isSorted === false) {\r\n      let i = 0;\r\n      while (i < steps.length) {\r\n        let current = i;\r\n        setTimeout(() => {\r\n          setArray(steps[current]);\r\n        }, 400 * i);\r\n        i++;\r\n      }\r\n      setIsSorted(true);\r\n    } else {\r\n      alert(\"Already sorted\");\r\n    }\r\n  };\r\n  const handleShowData = () => {\r\n    console.log(steps);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className='container '\r\n      style={{ margin: \"50px \", minWidth: \"1200px\", minHeight: \"500px\" }}\r\n    >\r\n      <div className='row'>\r\n        <div className='col s2 ' style={{ margin: \"20px\", padding: \"20px\" }}>\r\n          <div className='row'>\r\n            <a\r\n              class='waves-effect waves-light btn green'\r\n              onClick={handleCreateNewData}\r\n            >\r\n              Create New Array\r\n            </a>\r\n          </div>\r\n          <form action='#'>\r\n            <p>\r\n              <label>\r\n                <input\r\n                  className='with-gap'\r\n                  name='group1'\r\n                  type='radio'\r\n                  value='BubbleSort'\r\n                  onChange={handleOnchange}\r\n                />\r\n\r\n                <span>Bubble Sort</span>\r\n              </label>\r\n            </p>\r\n            <p>\r\n              <label>\r\n                <input\r\n                  className='with-gap'\r\n                  name='group1'\r\n                  type='radio'\r\n                  value='InsertionSort'\r\n                  onChange={handleOnchange}\r\n                />\r\n                <span>Insertion Sort</span>\r\n              </label>\r\n            </p>\r\n            <p>\r\n              <label>\r\n                <input\r\n                  className='with-gap'\r\n                  name='group1'\r\n                  type='radio'\r\n                  value='SelectionSort'\r\n                  onChange={handleOnchange}\r\n                />\r\n                <span>Selection Sort</span>\r\n              </label>\r\n            </p>\r\n            <p>\r\n              <label>\r\n                <input\r\n                  className='with-gap'\r\n                  name='group1'\r\n                  type='radio'\r\n                  value='HeapSort'\r\n                  onChange={handleOnchange}\r\n                />\r\n                <span>Heap Sort</span>\r\n              </label>\r\n            </p>{\" \"}\r\n            <p>\r\n              <label>\r\n                <input\r\n                  className='with-gap'\r\n                  name='group1'\r\n                  type='radio'\r\n                  value='MergeSort'\r\n                  onChange={handleOnchange}\r\n                />\r\n                <span>Merge Sort</span>\r\n              </label>\r\n            </p>{\" \"}\r\n            <p>\r\n              <label>\r\n                <input\r\n                  className='with-gap'\r\n                  name='group1'\r\n                  type='radio'\r\n                  value='QuickSort'\r\n                  onChange={handleOnchange}\r\n                />\r\n                <span>Quick Sort</span>\r\n              </label>\r\n            </p>\r\n          </form>\r\n          <div className='row'>\r\n            <a\r\n              class='waves-effect waves-light btn black'\r\n              onClick={handleShowData}\r\n            >\r\n              show\r\n            </a>\r\n          </div>\r\n          <div className='row'>\r\n            <a\r\n              class='waves-effect waves-light btn black'\r\n              onClick={setTimeoutfun}\r\n            >\r\n              Sort\r\n            </a>\r\n          </div>\r\n        </div>\r\n        <div className='col s9 grey' style={{ padding: \"10px\" }}>\r\n          <div style={{ minWidth: \"1000px\", minHeight: \"500px\" }}>\r\n            {arr.map((val, index) => (\r\n              <div key={index}>\r\n                <div style={{ height: \"1px\" }}></div>\r\n                <div\r\n                  className='bar black'\r\n                  style={{ height: \"15px\", width: val * 8 }}\r\n                >\r\n                  {\" \"}\r\n                </div>\r\n                <div style={{ height: \"1px\" }}></div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Container;\r\n","H:\\JavaScript_Sorting\\sorting\\src\\Components\\NewData.js",["56"],"import React from \"react\";\r\n\r\nconst createArray = () => {\r\n  let array = [\r\n    31.112856462814776,\r\n    57.75209603304715,\r\n    96.43700315369588,\r\n    34.00837013547678,\r\n    42.57353307254418,\r\n    20.03100816942839,\r\n    82.04594011137394,\r\n    36.33070296204374,\r\n    73.5833796063842,\r\n    7.837861641202726,\r\n    29.72750973963346,\r\n    69.93152642996772,\r\n    65.86225245890564,\r\n    41.11141905053983,\r\n    89.25709499374437,\r\n    25.533061538371882,\r\n    5.768328748375595,\r\n    22.318938900270314,\r\n    23.046483222720383,\r\n    23.06757765855354,\r\n    38.11695232417007,\r\n    74.54151100949474,\r\n    7.589277313087129,\r\n    55.89780473849749,\r\n  ];\r\n  // let i = 0;\r\n  // while (i < 25) {\r\n  //   let number = Math.random() * 100;\r\n  //   array.push(number);\r\n  //   i++;\r\n  // }\r\n  return array;\r\n};\r\nexport default createArray;\r\n","H:\\JavaScript_Sorting\\sorting\\src\\Components\\Algorithms\\sortingAlgos.js",["57","58","59","60","61"],"import React from \"react\";\r\nimport { Merge } from \"./helper\";\r\n\r\nexport const BubbleSort = (array, setSteps) => {\r\n  let funarray = new Array();\r\n  funarray = [...array];\r\n  let temp = [];\r\n  setSteps([]);\r\n  for (let i = 0; i < funarray.length - 1; i++) {\r\n    for (let j = 0; j < funarray.length - 1; j++) {\r\n      if (funarray[j] > funarray[j + 1]) {\r\n        [funarray[j], funarray[j + 1]] = [funarray[j + 1], funarray[j]];\r\n        temp.push(funarray.slice());\r\n      }\r\n    }\r\n  }\r\n  console.log(\"qorking\");\r\n  console.log(temp);\r\n  setSteps(temp);\r\n\r\n  return funarray;\r\n};\r\n\r\nexport const InsertionSort = (array, setSteps) => {\r\n  let funarray = new Array();\r\n  funarray = [...array];\r\n  let temp = [];\r\n  setSteps([]);\r\n  for (let i = 1; i < funarray.length; i++) {\r\n    let j = i - 1;\r\n    let x = funarray[i];\r\n    while (j > -1 && funarray[j] > x) {\r\n      funarray[j + 1] = funarray[j];\r\n      j--;\r\n    }\r\n    funarray[j + 1] = x;\r\n    temp.push(funarray.slice());\r\n  }\r\n  setSteps(temp);\r\n};\r\nexport const SelectionSort = (array, setSteps) => {\r\n  let funarray = new Array();\r\n  funarray = [...array];\r\n  let temp = [];\r\n  setSteps([]);\r\n  for (let i = 0; i < funarray.length; i++) {\r\n    let j, k;\r\n    for (j = k = i; j < funarray.length; j++) {\r\n      if (funarray[j] < funarray[k]) {\r\n        k = j;\r\n      }\r\n    }\r\n    [funarray[i], funarray[k]] = [funarray[k], funarray[i]];\r\n    temp.push(funarray.slice());\r\n  }\r\n  setSteps(temp);\r\n};\r\nexport const HeapSort = () => {};\r\n// Merge sort Iterative version version\r\nexport const MergeSort = (array, setSteps) => {\r\n  let funarray = new Array();\r\n  funarray = [...array];\r\n  let temp = [];\r\n  setSteps([]);\r\n  let p, i, low, mid, high;\r\n  for (p = 2; p <= funarray.length; p = p * 2) {\r\n    for (i = 0; i < i + p - 1; i = i + p) {\r\n      low = i;\r\n      high = i + p - 1;\r\n      mid = Math.floor((low + high) / 2);\r\n      Merge(funarray, mid, low, high);\r\n      temp.push(funarray.slice());\r\n    }\r\n  }\r\n  if (p / 2 < funarray.length) {\r\n    Merge(funarray, mid, low, high);\r\n    temp.push(funarray.slice());\r\n  }\r\n\r\n  setSteps(temp);\r\n};\r\nexport const QuickSort = () => {};\r\n","H:\\JavaScript_Sorting\\sorting\\src\\Components\\Algorithms\\helper.js",["62"],"//Helper file for Algorithms\r\n\r\nexport const Merge = (array, mid, l, h) => {\r\n  let i, j;\r\n  i = l;\r\n  j = mid + 1;\r\n  let temp = [];\r\n  while (i < mid + 1 && j < h) {\r\n    if (array[i] < array[j]) {\r\n      temp.push(array[i]);\r\n      i++;\r\n    } else {\r\n      temp.push(array[j]);\r\n      j++;\r\n    }\r\n  }\r\n  for (; i < mid + 1; i++) {\r\n    temp.push(array[i]);\r\n  }\r\n  for (; j < h; j++) {\r\n    temp.push(array[j]);\r\n  }\r\n  for (let i = 0; i < temp.length; i++) {\r\n    array[i] = temp[i];\r\n  }\r\n};\r\n\r\n// Tester Code\r\nconst mergeAlgoTester = () => {\r\n  const array = [10, 35, 3, 5, 34, 93, 40];\r\n  const mid = array.length / 2;\r\n  const low = 0;\r\n  const high = array.length;\r\n  const result = Merge(array, mid, low, high);\r\n  console.log(result);\r\n};\r\n","H:\\JavaScript_Sorting\\sorting\\src\\Components\\Aboutme.js",["63"],"import React from \"react\";\r\nimport image from \"../img/profile-photo.jpg\";\r\n\r\nconst Aboutme = () => {\r\n  return (\r\n    <div>\r\n      <div class='about-me container-fluid' id='About'>\r\n        <h2 class='about-me-heading center '>ABOUT ME</h2>\r\n        <div class='row' id='about-me'>\r\n          <div class='col s12 m3 l3 xl5 center'>\r\n            <img class='profile-image circle responsive-img' src={image} />\r\n          </div>\r\n          <div class='col s12 m8 l8 xl6 '>\r\n            <p class='flow-text'>\r\n              Hi, My name is Ashish Maurya. I'm a B.Tech Student at LNCTS\r\n              indore,RGPV in Computer Science Department.\r\n            </p>\r\n            <p class='flow-text'>\r\n              I program and develop web-apps. I usually prefer MERN stack but\r\n              can work with different tech stack as needed.{\" \"}\r\n            </p>\r\n            <p class='flow-text'>\r\n              I have an interest in music and reading books.\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Aboutme;\r\n","H:\\JavaScript_Sorting\\sorting\\src\\Components\\Contactme.js",["64","65","66","67","68","69","70","71","72","73"],{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","severity":1,"message":"79","line":1,"column":17,"nodeType":"80","messageId":"81","endLine":1,"endColumn":25},{"ruleId":"82","severity":1,"message":"83","line":9,"column":11,"nodeType":"84","endLine":9,"endColumn":42},{"ruleId":"78","severity":1,"message":"85","line":18,"column":9,"nodeType":"80","messageId":"81","endLine":18,"endColumn":14},{"ruleId":"82","severity":1,"message":"86","line":79,"column":13,"nodeType":"84","endLine":82,"endColumn":14},{"ruleId":"82","severity":1,"message":"86","line":162,"column":13,"nodeType":"84","endLine":165,"endColumn":14},{"ruleId":"82","severity":1,"message":"86","line":170,"column":13,"nodeType":"84","endLine":173,"endColumn":14},{"ruleId":"78","severity":1,"message":"87","line":1,"column":8,"nodeType":"80","messageId":"81","endLine":1,"endColumn":13},{"ruleId":"78","severity":1,"message":"87","line":1,"column":8,"nodeType":"80","messageId":"81","endLine":1,"endColumn":13},{"ruleId":"88","severity":1,"message":"89","line":5,"column":18,"nodeType":"90","messageId":"91","endLine":5,"endColumn":29},{"ruleId":"88","severity":1,"message":"89","line":25,"column":18,"nodeType":"90","messageId":"91","endLine":25,"endColumn":29},{"ruleId":"88","severity":1,"message":"89","line":42,"column":18,"nodeType":"90","messageId":"91","endLine":42,"endColumn":29},{"ruleId":"88","severity":1,"message":"89","line":61,"column":18,"nodeType":"90","messageId":"91","endLine":61,"endColumn":29},{"ruleId":"78","severity":1,"message":"92","line":29,"column":7,"nodeType":"80","messageId":"81","endLine":29,"endColumn":22},{"ruleId":"93","severity":1,"message":"94","line":11,"column":13,"nodeType":"84","endLine":11,"endColumn":76},{"ruleId":"78","severity":1,"message":"95","line":4,"column":10,"nodeType":"80","messageId":"81","endLine":4,"endColumn":20},{"ruleId":"78","severity":1,"message":"96","line":4,"column":22,"nodeType":"80","messageId":"81","endLine":4,"endColumn":35},{"ruleId":"78","severity":1,"message":"97","line":5,"column":10,"nodeType":"80","messageId":"81","endLine":5,"endColumn":19},{"ruleId":"78","severity":1,"message":"98","line":5,"column":21,"nodeType":"80","messageId":"81","endLine":5,"endColumn":33},{"ruleId":"78","severity":1,"message":"99","line":6,"column":10,"nodeType":"80","messageId":"81","endLine":6,"endColumn":15},{"ruleId":"78","severity":1,"message":"100","line":6,"column":17,"nodeType":"80","messageId":"81","endLine":6,"endColumn":25},{"ruleId":"78","severity":1,"message":"101","line":7,"column":10,"nodeType":"80","messageId":"81","endLine":7,"endColumn":18},{"ruleId":"78","severity":1,"message":"102","line":7,"column":20,"nodeType":"80","messageId":"81","endLine":7,"endColumn":31},{"ruleId":"78","severity":1,"message":"103","line":9,"column":9,"nodeType":"80","messageId":"81","endLine":9,"endColumn":23},{"ruleId":"78","severity":1,"message":"104","line":12,"column":9,"nodeType":"80","messageId":"81","endLine":12,"endColumn":23},"no-native-reassign",["105"],"no-negated-in-lhs",["106"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'color' is assigned a value but never used.","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'React' is defined but never used.","no-array-constructor","The array literal notation [] is preferable.","NewExpression","preferLiteral","'mergeAlgoTester' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'first_name' is assigned a value but never used.","'setFirst_name' is assigned a value but never used.","'last_name' is assigned a value but never used.","'setLast_name' is assigned a value but never used.","'email' is assigned a value but never used.","'setEmail' is assigned a value but never used.","'feedback' is assigned a value but never used.","'setfeedback' is assigned a value but never used.","'handleOnSubmit' is assigned a value but never used.","'handleOnChange' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]